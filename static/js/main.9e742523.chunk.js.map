{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClear","setState","handleSelect","good","this","selectionMessage","className","classnames","type","onClick","map","isSelected","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAG,iKAWZ,OAXY,oCACdC,MAAQ,CACNC,aAAc,OACd,EAEFC,YAAc,WACZ,EAAKC,SAAS,CAAEF,aAAc,MAC9B,EAEFG,aAAe,SAACC,GACd,EAAKF,SAAS,CAAEF,aAAcI,KAC/B,EAsEA,OAtEA,mCAED,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aACFM,EAAmBN,EAAY,UAC9BA,EAAY,gBACf,oBAEJ,OACE,uBAAMO,UAAU,oBAAmB,UACjC,qBACEA,UAAWC,IACT,QACA,CAAE,gCAAiCR,IACnC,UAEDM,EACAN,GAEC,wBACE,UAAQ,cACRS,KAAK,SACLF,UAAU,cACVG,QAASL,KAAKJ,iBAIpB,uBAAOM,UAAU,QAAO,SACtB,gCACGV,EAAMc,KAAI,SAACP,GACV,IAAMQ,EAAaZ,IAAiBI,EAEpC,OACE,qBAEE,UAAQ,OACRG,UAAWC,IAAW,CACpB,+BAAgCI,IAC/B,UAEH,6BACGA,EAEG,wBACE,UAAQ,eACRH,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKT,YAAY,SAC3B,MAID,wBACE,UAAQ,YACRQ,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKP,aAAaC,IAAM,SACxC,QAKP,oBAAI,UAAQ,YAAYG,UAAU,eAAc,SAAEH,MA5B7CA,iBAoCpB,EAjFa,CAASS,aCnBzBC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.9e742523.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classnames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleClear = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  handleSelect = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const selectionMessage = selectedGood\n      ? `${selectedGood} is selected`\n      : 'No goods selected';\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classnames(\n            'title',\n            { 'is-flex is-align-items-center': selectedGood },\n          )}\n        >\n          {selectionMessage}\n          {selectedGood && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClear}\n            />\n          )}\n        </h1>\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                  className={classnames({\n                    'has-background-success-light': isSelected,\n                  })}\n                >\n                  <td>\n                    {isSelected\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.handleClear}\n                        >\n                          -\n                        </button>\n                      ) : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => this.handleSelect(good)}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">{good}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}